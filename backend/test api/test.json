{
  "info": {
    "name": "PG-Hostel-APIs",
    "description": "Postman collection for PG Hostel Management backend: auth, properties, inquiries",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4000"
    },
    {
      "key": "token",
      "value": ""
    },
    {
      "key": "propertyId",
      "value": ""
    },
    {
      "key": "inquiryId",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "Auth - Signup (Renter)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Renter One\",\n  \"email\": \"renter1@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"renter\",\n  \"phone\": \"9999999999\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/signup",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "auth",
            "signup"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Auth - Signup (Tenant)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Tenant One\",\n  \"email\": \"tenant1@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"tenant\",\n  \"phone\": \"8888888888\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/signup",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "auth",
            "signup"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Auth - Login (Renter) — saves token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"renter1@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "auth",
            "login"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const json = pm.response.json();",
              "if (json.token) {",
              "  pm.collectionVariables.set('token', json.token);",
              "  console.log('Saved token to collection variable');",
              "} else {",
              "  console.warn('No token in login response');",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "response": []
    },
    {
      "name": "Auth - Login (Tenant) — saves tenant token (optional)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"tenant1@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "auth",
            "login"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// this will overwrite the same collection variable 'token' with tenant token if you run it",
              "const json = pm.response.json();",
              "if (json.token) {",
              "  pm.collectionVariables.set('token', json.token);",
              "  console.log('Saved tenant token to collection variable');",
              "} else {",
              "  console.warn('No token in login response');",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "response": []
    },
    {
      "name": "Properties - Create (Renter) — saves propertyId",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Spacious PG near College\",\n  \"description\": \"Shared rooms, meals included\",\n  \"propertyType\": \"PG\",\n  \"targetAudience\": \"women\",\n  \"furnishing\": \"furnished\",\n  \"petsAllowed\": false,\n  \"amenities\": [\"wifi\",\"parking\",\"laundry\",\"gas\"],\n  \"rooms\": [{\"name\":\"A1\",\"price\":5000,\"occupancy\":1,\"availableFrom\":\"2025-11-01\"}],\n  \"totalRooms\": 1,\n  \"occupancyPerRoom\": 1,\n  \"toilets\": {\"total\":1,\"attached\":1},\n  \"mealsProvided\": true,\n  \"price\": 5000,\n  \"currency\": \"INR\",\n  \"location\": {\"address\":\"Near College, Mumbai\",\"lat\":19.1,\"lng\":72.9},\n  \"photos\": [\"https://example.com/photo1.jpg\"],\n  \"status\": \"available\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/properties",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "properties"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const json = pm.response.json();",
              "if (json && json._id) {",
              "  pm.collectionVariables.set('propertyId', json._id);",
              "  console.log('Saved propertyId:', json._id);",
              "} else if (json && json.id) {",
              "  pm.collectionVariables.set('propertyId', json.id);",
              "  console.log('Saved propertyId:', json.id);",
              "} else {",
              "  console.warn('Could not find property id in response');",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "response": []
    },
    {
      "name": "Properties - List (filters)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/properties?amenities=wifi,parking&minPrice=1000&maxPrice=10000&audience=women",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "properties"
          ],
          "query": [
            {
              "key": "amenities",
              "value": "wifi,parking"
            },
            {
              "key": "minPrice",
              "value": "1000"
            },
            {
              "key": "maxPrice",
              "value": "10000"
            },
            {
              "key": "audience",
              "value": "women"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Properties - Get by ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/properties/{{propertyId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "properties",
            "{{propertyId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Properties - Update (owner)",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Updated PG Title\",\n  \"price\": 5500,\n  \"amenities\": [\"wifi\",\"parking\",\"laundry\"]\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/properties/{{propertyId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "properties",
            "{{propertyId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Properties - Delete (owner)",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/properties/{{propertyId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "properties",
            "{{propertyId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Inquiries - Create (Tenant) — saves inquiryId",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"propertyId\": \"{{propertyId}}\",\n  \"message\": \"Hi, I am interested. Is the room available from next month?\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/inquiries",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "inquiries"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const json = pm.response.json();",
              "if (json && json._id) {",
              "  pm.collectionVariables.set('inquiryId', json._id);",
              "  console.log('Saved inquiryId:', json._id);",
              "} else if (json && json.id) {",
              "  pm.collectionVariables.set('inquiryId', json.id);",
              "  console.log('Saved inquiryId:', json.id);",
              "} else {",
              "  console.warn('Could not find inquiry id in response');",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "response": []
    },
    {
      "name": "Inquiries - List for Owner (renter)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/inquiries",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "inquiries"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Inquiries - List my inquiries (tenant)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/inquiries/my",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "inquiries",
            "my"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Inquiries - Update status (owner)",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"status\": \"contacted\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/inquiries/{{inquiryId}}/status",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "inquiries",
            "{{inquiryId}}",
            "status"
          ]
        }
      },
      "response": []
    }
  ]
}
